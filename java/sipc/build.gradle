plugins {
    id 'java'
    id 'maven'
    id 'maven-publish'
    id 'signing'
}

apply plugin: 'com.google.protobuf'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    testCompileOnly 'org.projectlombok:lombok:1.18.20'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.20'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
    testRuntimeOnly group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.30'

    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'

    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    implementation 'org.slf4j:slf4j-api:1.7.30'

    implementation 'org.bouncycastle:bcprov-jdk15on:1.68'
    implementation 'org.bouncycastle:bcpkix-jdk15on:1.68'

    // https://mvnrepository.com/artifact/org.mongodb/bson
    implementation group: 'org.mongodb', name: 'bson', version: '4.2.3'

    implementation 'com.google.protobuf:protobuf-java:3.17.1'

//    implementation group: 'io.grpc', name: 'grpc-core', version: '1.38.0'
//    implementation group: 'io.grpc', name: 'grpc-protobuf', version: '1.38.0'
//    implementation group: 'io.grpc', name: 'grpc-stub', version: '1.38.0'

    if (JavaVersion.current().isJava9Compatible()) {
        // Workaround for @javax.annotation.Generated
        // see: https://github.com/grpc/grpc-java/issues/3633
        compile 'javax.annotation:javax.annotation-api:1.3.1'
    }

    // https://mvnrepository.com/artifact/org.mongodb/bson
    implementation group: 'org.mongodb', name: 'bson', version: '4.2.3'

    // https://mvnrepository.com/artifact/com.google.guava/guava
    implementation group: 'com.google.guava', name: 'guava', version: '30.1.1-jre'

    // https://mvnrepository.com/artifact/commons-io/commons-io
    implementation group: 'commons-io', name: 'commons-io', version: '2.9.0'
}

protobuf {
    protoc {
        // The artifact spec for the Protobuf Compiler
        artifact = 'com.google.protobuf:protoc:3.17.1'
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.38.0'
        }
    }
    generateProtoTasks {
//        all()*.plugins {
//            grpc {}
//        }
    }
}

sourceSets {
    main {
        proto {
            def protoDir = new File(rootDir.parent, "proto").path
            srcDir "${protoDir}"
        }
        java {
            srcDirs = [
                    'src/main/java',
                    'build/generated/source/proto/main/java',
                    'build/generated/source/proto/main/grpc'
            ]
            exclude('kr/jclab/javautils/sipc/grpc/**')
        }
    }
    test {
        proto {
            def protoDir = new File(rootDir.parent, "sample-proto").path
            srcDir "${protoDir}"
        }
        java {
            srcDirs = [
                    'src/test/java',
                    'build/generated/source/proto/test/java',
                    'build/generated/source/proto/test/grpc'
            ]
            exclude('GrpcTest.java')
        }
    }
}

test {
    useJUnitPlatform()
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar, javadocJar
}

signing {
    useGpgCmd()
    sign configurations.archives
}

tasks.withType(Sign) {
    onlyIf { gradle.ext.isReleaseVersion && (project.hasProperty('signing.gnupg.keyName') || project.hasProperty('signing.keyId')) }
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: findProperty('ossrhUsername'), password: findProperty('ossrhPassword'))
            }

            snapshotRepository(url: "https://s01.oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: findProperty('ossrhUsername'), password: findProperty('ossrhPassword'))
            }

            pom.project {
                name 'jcu-sipc'
                packaging 'jar'
                // optionally artifactId can be defined here
                description 'jcu-sipc'
                url 'https://github.com/jc-lab/jcu-sipc'

                scm {
                    connection 'scm:git:https://github.com/jc-lab/jcu-sipc.git'
                    developerConnection 'scm:git:ssh://git@github.com/jc-lab/jcu-sipc.git'
                    url 'https://github.com/jc-lab/jcu-sipc'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'jclab'
                        name 'Joseph Lee'
                        email 'development@jc-lab.net'
                    }
                }
            }
        }
    }
}
